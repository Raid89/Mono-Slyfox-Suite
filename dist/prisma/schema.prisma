generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["suite"]
}

model companies {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  isActive        Boolean?          @default(true) @map("is_active")
  created_at      DateTime?         @default(now()) @db.Timestamp(6)
  nit             String            @unique(map: "unique_nit") @db.VarChar(50)
  address         String
  phone           String            @db.VarChar(30)
  email           String            @unique(map: "unique_company_email") @db.VarChar(150)
  company_modules company_modules[]
  roles           roles[]
  subscriptions   subscriptions[]
  users           users[]

  @@schema("suite")
}

model users {
  id                       Int        @id @default(autoincrement())
  company_id               Int?
  name                     String     @db.VarChar(100)
  email                    String     @unique(map: "idx_users_email") @db.VarChar(150)
  password_hash            String
  is_active                Boolean?   @default(true)
  created_at               DateTime?  @default(now()) @db.Timestamp(6)
  role_id                  Int?
  document                 String     @unique(map: "unique_document") @db.VarChar(50)
  isEmailVerified          Boolean    @default(false) @map("is_email_verified")
  email_verification_token String?    @db.VarChar
  hashedRt                 String?
  currentJti               String?
  companies                companies? @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  roles                    roles?     @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([company_id], map: "idx_users_company")
  @@schema("suite")
}

model company_modules {
  id                        Int        @id @default(autoincrement())
  company_id                Int?
  module_id                 Int?
  activated_by_subscription Boolean?   @default(true)
  companies                 companies? @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  modules                   modules?   @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([company_id, module_id])
  @@schema("suite")
}

model modules {
  id              Int               @id @default(autoincrement())
  name            String            @unique @db.VarChar(100)
  description     String?
  application_id  Int?
  created_at      DateTime?         @default(now()) @db.Timestamp(6)
  company_modules company_modules[]
  permissions     permissions[]
  plan_modules    plan_modules[]
  applications    applications?     @relation(fields: [application_id], references: [id], onDelete: SetNull, onUpdate: NoAction)

  @@schema("suite")
}

model permissions {
  id               Int                @id @default(autoincrement())
  module_id        Int?
  name             String             @db.VarChar(100)
  description      String?
  modules          modules?           @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  role_permissions role_permissions[]

  @@unique([module_id, name])
  @@index([module_id], map: "idx_permissions_module")
  @@schema("suite")
}

model plan_modules {
  id        Int      @id @default(autoincrement())
  plan_id   Int?
  module_id Int?
  modules   modules? @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  plans     plans?   @relation(fields: [plan_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([plan_id, module_id])
  @@index([module_id], map: "idx_plan_modules_module")
  @@index([plan_id], map: "idx_plan_modules_plan")
  @@schema("suite")
}

model plans {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(100)
  description   String?
  monthly_price Decimal?        @default(0.00) @db.Decimal(10, 2)
  created_at    DateTime?       @default(now()) @db.Timestamp(6)
  plan_modules  plan_modules[]
  subscriptions subscriptions[]

  @@schema("suite")
}

model role_permissions {
  id            Int          @id @default(autoincrement())
  role_id       Int?
  permission_id Int?
  permissions   permissions? @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  roles         roles?       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([role_id, permission_id])
  @@schema("suite")
}

model roles {
  id               Int                @id @default(autoincrement())
  company_id       Int?
  name             String             @db.VarChar(100)
  description      String?
  role_permissions role_permissions[]
  companies        companies?         @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users            users[]

  @@index([company_id], map: "idx_roles_company")
  @@unique([name, company_id])
  @@schema("suite")
}

model subscriptions {
  id         Int        @id @default(autoincrement())
  company_id Int?
  plan_id    Int?
  start_date DateTime?  @default(now()) @db.Timestamp(6)
  end_date   DateTime?  @db.Timestamp(6)
  status     String?    @default("active") @db.VarChar(20)
  auto_renew Boolean?   @default(true)
  companies  companies? @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  plans      plans?     @relation(fields: [plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([status], map: "idx_subscriptions_status")
  @@schema("suite")
}

model applications {
  id        Int       @id @default(autoincrement())
  name      String    @unique @db.VarChar(100)
  created_at DateTime @default(now()) @db.Timestamp(6)
  modules   modules[]

  @@schema("suite")
}
